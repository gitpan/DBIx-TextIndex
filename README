NAME
    DBIx::TextIndex - Perl extension for full-text searching in SQL
    databases

SYNOPSIS
     use DBIx::TextIndex;

     $index = DBIx::TextIndex->new({
         index_dbh => $index_dbh,
         collection => 'collection_name',
         doc_fields => ['field1', 'field2'],
     });

     $index->initialize();

     $index->add( key1 => { field1 => 'some text', field2 => 'more text' } );

     $results = $index->search({
         field1 => '"a phrase" +and -not or',
         field2 => 'more words',
     });

     foreach my $key
         (sort {$$results{$b} <=> $$results{$a}} keys %$results )
     {
         print "Key: $key Score: $$results{$key} \n";
     }

DESCRIPTION
    DBIx::TextIndex was developed for doing full-text searches on BLOB
    columns stored in a database. Almost any database with BLOB and DBI
    support should work with minor adjustments to SQL statements in the
    module. MySQL, PostgreSQL, and SQLite are currently supported.

    As of version 0.24, data from any source can be indexed by passing it to
    the "add()" method as a string.

CHANGES

0.25
    New methods indexed() and last_indexed_key()

    Removed a few stray print statements

